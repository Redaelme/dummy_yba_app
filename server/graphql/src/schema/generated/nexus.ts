/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { Context } from "./../../types/contextType"
import { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * Date custom scalar type
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * Date custom scalar type
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AcceptMailInput: { // input type
    appointmentUserAction: string; // String!
    emailPayload: string; // String!
    id: string; // String!
  }
  AcceptMailWithVisioInput: { // input type
    date: string; // String!
    from: string; // String!
    subject: string; // String!
    to: string; // String!
  }
  AcceptMailWithoutSlotProposalInput: { // input type
    calendar: string; // String!
    from: string; // String!
    location: string; // String!
    slotProposal: Array<string | null>; // [String]!
    subject: string; // String!
    to: string; // String!
  }
  AddressInput: { // input type
    adresse: string; // String!
    isRemoved: boolean; // Boolean!
    libelle: string; // String!
    userId: string; // String!
  }
  AppointmentsShedulerInput: { // input type
    addressId?: string | null; // String
    buildingId: string; // String!
    capacity?: number | null; // Int
    debut: NexusGenScalars['DateTime']; // DateTime!
    duration: number; // Int!
    email: string; // String!
    eventId?: string | null; // String
    fin: NexusGenScalars['DateTime']; // DateTime!
    fullName?: string | null; // String
    lang?: string | null; // String
    lastName?: string | null; // String
    localisation: NexusGenInputs['Localisation']; // Localisation!
    meetingRescheduled?: boolean | null; // Boolean
    niveau: string; // String!
    objet: string; // String!
    reminder: string; // String!
    scheduleId?: string | null; // String
    sujet?: string | null; // String
    template?: string | null; // String
    userInvited?: Array<NexusGenInputs['UserInfoInput'] | null> | null; // [UserInfoInput]
    UTC: number; // Int!
  }
  BookingLinkInput: { // input type
    bookingTimes?: NexusGenInputs['BookingTimesInput'] | null; // BookingTimesInput
    duration: number; // Int!
    expirationDuration: number; // Int!
    language: string; // String!
    level: string; // String!
    userId: string; // String!
  }
  BookingTimeInput: { // input type
    end: string; // String!
    isAvailable: boolean; // Boolean!
    start: string; // String!
  }
  BookingTimesInput: { // input type
    friday?: NexusGenInputs['BookingTimeInput'] | null; // BookingTimeInput
    monday?: NexusGenInputs['BookingTimeInput'] | null; // BookingTimeInput
    saturday?: NexusGenInputs['BookingTimeInput'] | null; // BookingTimeInput
    sunday?: NexusGenInputs['BookingTimeInput'] | null; // BookingTimeInput
    thursday?: NexusGenInputs['BookingTimeInput'] | null; // BookingTimeInput
    tuesday?: NexusGenInputs['BookingTimeInput'] | null; // BookingTimeInput
    wednesday?: NexusGenInputs['BookingTimeInput'] | null; // BookingTimeInput
  }
  CalendarInputs: { // input type
    debut: NexusGenScalars['DateTime']; // DateTime!
    fin: NexusGenScalars['DateTime']; // DateTime!
  }
  ChangePasswordInput: { // input type
    email: string; // String!
    newPassword: string; // String!
  }
  DateInputs: { // input type
    debut: NexusGenScalars['DateTime']; // DateTime!
    fin: NexusGenScalars['DateTime']; // DateTime!
  }
  EmailToTrainTheModelInput: { // input type
    content?: string | null; // String
    object?: string | null; // String
  }
  GetMailInputs: { // input type
    maxResult: number; // Int!
  }
  IncomingMeetingRequestInput: { // input type
    appointmentStatus?: string | null; // String
    appointmentUserAction?: string | null; // String
    contents?: string | null; // String
    dateEntity?: string | null; // String
    eventId?: string | null; // String
    GMT: number; // Int!
    htmlBody?: string | null; // String
    lang?: string | null; // String
    location?: string | null; // String
    mailId: string; // String!
    messageId?: string | null; // String
    object?: string | null; // String
    receivedDatetime: string; // String!
    recipients?: string | null; // String
    schedulePriority?: string | null; // String
    sender?: string | null; // String
    senderFullName?: string | null; // String
    sheduleId?: string | null; // String
    typeMail?: string | null; // String
  }
  IncomingRequestInput: { // input type
    appointmentStatus?: string | null; // String
    appointmentUserAction?: string | null; // String
    contents?: string | null; // String
    dateEntity?: string | null; // String
    eventId?: string | null; // String
    GMT: number; // Int!
    htmlBody?: string | null; // String
    lang?: string | null; // String
    location?: string | null; // String
    mailId: string; // String!
    object?: string | null; // String
    receivedDatetime: string; // String!
    recipients?: string | null; // String
    schedulePriority?: string | null; // String
    sender?: string | null; // String
    senderFullName?: string | null; // String
    sheduleId?: string | null; // String
    typeMail?: string | null; // String
  }
  Localisation: { // input type
    location: string; // String!
    visioConf: boolean; // Boolean!
  }
  MailServiceAuthInputs: { // input type
    accessToken: string; // String!
    refreshToken: string; // String!
    tokenExpiryDateTime: string; // String!
  }
  MatchingInputs: { // input type
    date: NexusGenInputs['DateInputs']; // DateInputs!
    duration?: number | null; // Int
    location?: string | null; // String
    newDate?: NexusGenInputs['DateInputs'] | null; // DateInputs
    typeMail: number; // Int!
    userInvited?: string[] | null; // [String!]
  }
  MatchingListInputs: { // input type
    dateList: NexusGenInputs['DateInputs'][]; // [DateInputs!]!
    duration?: number | null; // Int
    location?: string | null; // String
    mailId: string; // String!
    newDate?: Array<NexusGenInputs['DateInputs'] | null> | null; // [DateInputs]
    typeMail: number; // Int!
    userInvited?: string[] | null; // [String!]
    UTC?: number | null; // Int
  }
  OauthInput: { // input type
    access_token: string; // String!
    email: string; // String!
  }
  OauthUpdateInput: { // input type
    email: string; // String!
    refreshToken?: string | null; // String
    token?: string | null; // String
    tokenExpiryDateTime?: string | null; // String
  }
  RefusalMailInput: { // input type
    appointmentUserAction: string; // String!
    emailPayload: string; // String!
    id: string; // String!
  }
  ResetPasswordInput: { // input type
    email: string; // String!
    newPassword: string; // String!
    token: string; // String!
  }
  SubtaskInput: { // input type
    assignedTo: string; // String!
    deadline: string; // String!
    duration: string; // String!
    endDate: string; // String!
    participants: string; // String!
    priority: string; // String!
    startDate: string; // String!
    title: string; // String!
  }
  TaskInput: { // input type
    assignedTo: string; // String!
    deadline: string; // String!
    duration: string; // String!
    endDate: string; // String!
    mode: string; // String!
    participants: string; // String!
    priority: string; // String!
    startDate: string; // String!
    subtasks?: NexusGenInputs['SubtaskInput'][] | null; // [SubtaskInput!]
    tag: string; // String!
    title: string; // String!
  }
  TimeSlotInput: { // input type
    date: string; // String!
    mail: string; // String!
  }
  UpdateIncomingMeetingRequestInput: { // input type
    appointmentUserAction: string; // String!
    id: string; // String!
  }
  UpdateIncomingMeetingRequestReceveidDateTimeInputs: { // input type
    mailId: string; // String!
    receivedDateTime: string; // String!
  }
  UpdateIncomingRequestInput: { // input type
    appointmentUserAction: string; // String!
    id: string; // String!
  }
  UpdateIncomingRequestReceveidDateTimeInputs: { // input type
    mailId: string; // String!
    receivedDateTime: string; // String!
  }
  UpdateScheduleInputs: { // input type
    addressId?: string | null; // String
    buildingId?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    debut?: NexusGenScalars['DateTime'] | null; // DateTime
    duration?: number | null; // Int
    email?: string | null; // String
    fin?: NexusGenScalars['DateTime'] | null; // DateTime
    fullName?: string | null; // String
    lang?: string | null; // String
    lastName?: string | null; // String
    localisation?: NexusGenInputs['Localisation'] | null; // Localisation
    niveau?: string | null; // String
    objet?: string | null; // String
    reminder?: string | null; // String
    sujet?: string | null; // String
    template?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    userInvited?: Array<NexusGenInputs['UserInfoInput'] | null> | null; // [UserInfoInput]
    UTC?: number | null; // Int
  }
  UserCreateInput: { // input type
    calendarType: NexusGenEnums['CalendarTypes']; // CalendarTypes!
    email: string; // String!
    firstName: string; // String!
    id?: string | null; // String
    lang?: string | null; // String
    lastName: string; // String!
    mailService: NexusGenEnums['MailService']; // MailService!
    mailServiceAuth: NexusGenInputs['MailServiceAuthInputs']; // MailServiceAuthInputs!
    notificationToken: string; // String!
    password: string; // String!
    signupCompleted?: boolean | null; // Boolean
    timezone?: string | null; // String
  }
  UserFromBO: { // input type
    company: string; // String!
    email: string; // String!
    firstName: string; // String!
    lastName: string; // String!
    password: string; // String!
  }
  UserFromBOInput: { // input type
    input: Array<NexusGenInputs['UserFromBO'] | null>; // [UserFromBO]!
  }
  UserInfoInput: { // input type
    email: string; // String!
    required: boolean; // Boolean!
  }
  UserPreferenceInputs: { // input type
    averageTravelTime: number; // Int!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    highCanExtendWorkingTimes: boolean; // Boolean!
    highCanRescheduleLow: boolean; // Boolean!
    highCanRescheduleMedium: boolean; // Boolean!
    highCanSkipPauseTimes: boolean; // Boolean!
    hightWorkingHoursBegin: NexusGenScalars['DateTime']; // DateTime!
    highWorkingHoursEnd: NexusGenScalars['DateTime']; // DateTime!
    mediumCanExtendWorkingHours: boolean; // Boolean!
    mediumCanRescheduleLow: boolean; // Boolean!
    mediumCanSkipPauseTimes: boolean; // Boolean!
    mediumWorkingHoursBegin: NexusGenScalars['DateTime']; // DateTime!
    mediumWorkingHoursEnd: NexusGenScalars['DateTime']; // DateTime!
    pauseHours: string; // String!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    userId: string; // String!
    waitngResponseTimeForHIM: number; // Int!
    waitngResponseTimeForLIM: number; // Int!
    waitngResponseTimeForMIM: number; // Int!
    workingDays: string; // String!
    workingHoursBegin: NexusGenScalars['DateTime']; // DateTime!
    workingHoursEnd: NexusGenScalars['DateTime']; // DateTime!
  }
  UserProfileInput: { // input type
    displayName?: string | null; // String
    email?: string | null; // String
    firstName?: string | null; // String
    lastName?: string | null; // String
  }
  generateAccessTokenInput: { // input type
    serverAuthCode: string; // String!
  }
  getRoomsInputs: { // input type
    maxResults?: number | null; // Int
  }
  notificationUpdateInput: { // input type
    email: string; // String!
    token: string; // String!
  }
  removeEventInputs: { // input type
    email: string; // String!
    eventId: string; // String!
  }
}

export interface NexusGenEnums {
  CalendarTypes: "APPLE_CALENDAR" | "GOOGLE"
  MailService: "GOOGLE" | "MICROSOFT"
  UserRole: "ADMIN" | "USER"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  AddressType: { // root type
    adresse: string; // String!
    defaultAddress: boolean; // Boolean!
    fromRemote: boolean; // Boolean!
    id: string; // String!
    isRemoved?: boolean | null; // Boolean
    libelle: string; // String!
    userId?: string | null; // String
  }
  Attendees: { // root type
    email?: string | null; // String
    name?: string | null; // String
    responseStatus?: string | null; // String
  }
  AuthUser: { // root type
    completedSignUp?: boolean | null; // Boolean
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  AuthUserBO: { // root type
    token: string; // String!
    userBO: NexusGenRootTypes['UserBO']; // UserBO!
  }
  BookingTime: { // root type
    end: string; // String!
    isAvailable: boolean; // Boolean!
    start: string; // String!
  }
  BookingTimes: { // root type
    friday?: NexusGenRootTypes['BookingTime'] | null; // BookingTime
    monday?: NexusGenRootTypes['BookingTime'] | null; // BookingTime
    saturday?: NexusGenRootTypes['BookingTime'] | null; // BookingTime
    sunday?: NexusGenRootTypes['BookingTime'] | null; // BookingTime
    thursday?: NexusGenRootTypes['BookingTime'] | null; // BookingTime
    tuesday?: NexusGenRootTypes['BookingTime'] | null; // BookingTime
    wednesday?: NexusGenRootTypes['BookingTime'] | null; // BookingTime
  }
  CalendarEvent: { // root type
    attendees?: Array<NexusGenRootTypes['Attendees'] | null> | null; // [Attendees]
    colorId?: string | null; // String
    created?: string | null; // String
    creator?: string | null; // String
    description?: string | null; // String
    end?: NexusGenScalars['DateTime'] | null; // DateTime
    etag?: string | null; // String
    eventType?: string | null; // String
    htmlLink?: string | null; // String
    id?: string | null; // String
    kind?: string | null; // String
    lang?: string | null; // String
    level?: string | null; // String
    location?: string | null; // String
    onlineMeeting?: string | null; // String
    organizer?: string | null; // String
    reminderMinutesBeforeStart?: number | null; // Int
    start?: NexusGenScalars['DateTime'] | null; // DateTime
    status?: string | null; // String
    subject?: string | null; // String
    summary?: string | null; // String
    updated?: string | null; // String
  }
  CompleteIncomingMessage: { // root type
    incomingEmails?: Array<NexusGenRootTypes['IncomingEmail'] | null> | null; // [IncomingEmail]
    userId: string; // String!
  }
  Contact: { // root type
    displayName: string; // String!
    emailAddresses: Array<string | null>; // [String]!
  }
  EmailToTrainTheModelType: { // root type
    content?: string | null; // String
    id: string; // String!
    object?: string | null; // String
  }
  EmailUserInfo: { // root type
    emailAddress: string; // String!
    name: string; // String!
  }
  GetUserMail: { // root type
    cc?: Array<string | null> | null; // [String]
    content?: string | null; // String
    htmlBody?: string | null; // String
    id?: string | null; // String
    isRead?: boolean | null; // Boolean
    object?: string | null; // String
    receivedDateTime?: string | null; // String
    recipients?: Array<string | null> | null; // [String]
    sender?: NexusGenRootTypes['SenderType'] | null; // SenderType
    subject?: string | null; // String
  }
  IncomingEmail: { // root type
    cc?: Array<string | null> | null; // [String]
    content: string; // String!
    htmlBody?: string | null; // String
    id: string; // String!
    isRead: boolean; // Boolean!
    object: string; // String!
    receivedDateTime: NexusGenScalars['DateTime']; // DateTime!
    recipients: Array<string | null>; // [String]!
    sender: NexusGenRootTypes['EmailUserInfo']; // EmailUserInfo!
  }
  IncomingMeetingRequestType: { // root type
    appointmentStatus?: string | null; // String
    appointmentUserAction?: string | null; // String
    contents?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    dateEntity?: string | null; // String
    eventId?: string | null; // String
    GMT: number; // Int!
    htmlBody?: string | null; // String
    id?: string | null; // String
    lang?: string | null; // String
    location?: string | null; // String
    messageId?: string | null; // String
    object?: string | null; // String
    recipients?: string | null; // String
    schedulePriority?: string | null; // String
    sender?: string | null; // String
    senderFullName?: string | null; // String
    sheduleId?: string | null; // String
    typeMail?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    userId?: string | null; // String
  }
  IncomingRequestType: { // root type
    appointmentStatus?: string | null; // String
    appointmentUserAction?: string | null; // String
    contents?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    dateEntity?: string | null; // String
    eventId?: string | null; // String
    GMT: number; // Int!
    htmlBody?: string | null; // String
    id?: string | null; // String
    lang?: string | null; // String
    location?: string | null; // String
    object?: string | null; // String
    recipients?: string | null; // String
    schedulePriority?: string | null; // String
    sender?: string | null; // String
    senderFullName?: string | null; // String
    sheduleId?: string | null; // String
    typeMail?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    userId?: string | null; // String
  }
  InvitedUserInfo: { // root type
    email: string; // String!
    required: boolean; // Boolean!
  }
  Location: { // root type
    location: string; // String!
    visioConf: boolean; // Boolean!
  }
  Matching: { // root type
    busy: boolean; // Boolean!
    eventId?: string | null; // String
  }
  MatchingDate: { // root type
    end: string; // String!
    start: string; // String!
  }
  MatchingList: { // root type
    busy: boolean; // Boolean!
    Date?: NexusGenRootTypes['MatchingDate'] | null; // MatchingDate
    eventId?: string | null; // String
  }
  Mutation: {};
  Oauth: { // root type
    access_token?: string | null; // String
    email?: string | null; // String
    id: string; // ID!
  }
  OutUsersAll: { // root type
    length: number; // Int!
    users: Array<NexusGenRootTypes['User'] | null>; // [User]!
  }
  OutlookEmail: { // root type
    bodyPreview: string; // String!
    id: string; // String!
    isRead: boolean; // Boolean!
    sender?: NexusGenRootTypes['OutlookEmailAdress'] | null; // OutlookEmailAdress
    subject: string; // String!
    toRecipients?: Array<NexusGenRootTypes['OutlookEmailAdress'] | null> | null; // [OutlookEmailAdress]
  }
  OutlookEmailAdress: { // root type
    address?: string | null; // String
    name?: string | null; // String
  }
  Query: {};
  RoomsData: { // root type
    buildingId?: string | null; // String
    capacity?: number | null; // Int
    generatedResourceName?: string | null; // String
    resourceCategory?: string | null; // String
    resourceEmail?: string | null; // String
    resourceName?: string | null; // String
    resourcesId?: string | null; // String
    resourceType?: string | null; // String
  }
  Schedule: { // root type
    addressId?: string | null; // String
    buildingId?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    debut: NexusGenScalars['DateTime']; // DateTime!
    duration: number; // Int!
    email: string; // String!
    fin: NexusGenScalars['DateTime']; // DateTime!
    GMT: number; // Int!
    id: string; // String!
    lang?: string | null; // String
    localisation?: string | null; // String
    niveau?: string | null; // String
    objet: string; // String!
    sujet?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    userInvited?: Array<NexusGenRootTypes['InvitedUserInfo'] | null> | null; // [InvitedUserInfo]
    visioConf: boolean; // Boolean!
  }
  Schedules: { // root type
    acceptedSlot?: NexusGenScalars['DateTime'] | null; // DateTime
    addressId?: string | null; // String
    buildingId?: string | null; // String
    confirmedMessageId?: string | null; // String
    creationDate?: string | null; // String
    debut: NexusGenScalars['DateTime']; // DateTime!
    duration: number; // Int!
    email: string; // String!
    eventId?: string | null; // String
    fin: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    lang?: string | null; // String
    localisation?: string | null; // String
    messageId?: string | null; // String
    niveau?: string | null; // String
    objet: string; // String!
    personNumber: number; // Int!
    reminder: string; // String!
    status: string; // String!
    sujet?: string | null; // String
    type: string; // String!
    userInvited?: Array<NexusGenRootTypes['InvitedUserInfo'] | null> | null; // [InvitedUserInfo]
    usertoken?: string | null; // String
    visioConf: boolean; // Boolean!
  }
  SenderType: { // root type
    emailAddress?: string | null; // String
    name?: string | null; // String
  }
  SheduleType: { // root type
    duration?: number | null; // Int
    end?: NexusGenScalars['DateTime'] | null; // DateTime
    start?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  SuccessReturn: { // root type
    message: string; // String!
    success: boolean; // Boolean!
  }
  Task: { // root type
    assignedTo?: string | null; // String
    createdAt?: string | null; // String
    deadline: string; // String!
    duration: number; // Int!
    endDate?: string | null; // String
    endTime?: string | null; // String
    id: string; // String!
    mode: string; // String!
    notes?: string | null; // String
    parentTaskId?: string | null; // String
    participants?: string | null; // String
    priority?: string | null; // String
    progress?: number | null; // Int
    scheduleId?: string | null; // String
    startDate?: string | null; // String
    startTime?: string | null; // String
    status?: string | null; // String
    tag?: string | null; // String
    timezone?: string | null; // String
    title: string; // String!
    updatedAt?: string | null; // String
    userId?: string | null; // String
  }
  TimeSlot: { // root type
    end?: NexusGenScalars['DateTime'] | null; // DateTime
    start?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  TimeSlotList: { // root type
    TimeList?: Array<NexusGenRootTypes['TimeSlot'] | null> | null; // [TimeSlot]
  }
  User: { // root type
    avatar?: string | null; // String
    beginModeFree?: NexusGenScalars['DateTime'] | null; // DateTime
    calendarType?: string | null; // String
    company?: string | null; // String
    contacts?: Array<NexusGenRootTypes['Contact'] | null> | null; // [Contact]
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    displayName?: string | null; // String
    email?: string | null; // String
    firstName?: string | null; // String
    id: string; // ID!
    isActive?: boolean | null; // Boolean
    isBanned?: boolean | null; // Boolean
    isPayed?: boolean | null; // Boolean
    isRemoved?: boolean | null; // Boolean
    isSingupBO?: boolean | null; // Boolean
    lang?: string | null; // String
    lastName?: string | null; // String
    mailService?: string | null; // String
    modeFree?: boolean | null; // Boolean
    oauthStatus?: string | null; // String
    password?: string | null; // String
    role?: NexusGenEnums['UserRole'] | null; // UserRole
    signupCompleted?: boolean | null; // Boolean
    timezone?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UserBO: { // root type
    avatar?: string | null; // String
    email?: string | null; // String
    firstName?: string | null; // String
    id: string; // ID!
    lastName?: string | null; // String
    password?: string | null; // String
    role?: string | null; // String
  }
  UserBookingLinkPreference: { // root type
    bookingTimes?: string | null; // String
    duration?: number | null; // Int
    expirationDuration?: number | null; // Int
    language?: string | null; // String
    level?: string | null; // String
  }
  UserContact: { // root type
    displayName: string; // String!
    emailAddresses: Array<string | null>; // [String]!
  }
  UserPreference: { // root type
    averageTravelTime?: number | null; // Int
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    highCanExtendWorkingTimes?: boolean | null; // Boolean
    highCanRescheduleLow?: boolean | null; // Boolean
    highCanRescheduleMedium?: boolean | null; // Boolean
    highCanSkipPauseTimes?: boolean | null; // Boolean
    hightWorkingHoursBegin?: NexusGenScalars['DateTime'] | null; // DateTime
    highWorkingHoursEnd?: NexusGenScalars['DateTime'] | null; // DateTime
    id: string; // ID!
    mediumCanExtendWorkingHours?: boolean | null; // Boolean
    mediumCanRescheduleLow?: boolean | null; // Boolean
    mediumCanSkipPauseTimes?: boolean | null; // Boolean
    mediumWorkingHoursBegin?: NexusGenScalars['DateTime'] | null; // DateTime
    mediumWorkingHoursEnd?: NexusGenScalars['DateTime'] | null; // DateTime
    pauseHours?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    userId?: string | null; // String
    waitngResponseTimeForHIM?: number | null; // Int
    waitngResponseTimeForLIM?: number | null; // Int
    waitngResponseTimeForMIM?: number | null; // Int
    workingDays?: string | null; // String
    workingHoursBegin?: NexusGenScalars['DateTime'] | null; // DateTime
    workingHoursEnd?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  generateAccessTokenType: { // root type
    expiry_date: NexusGenScalars['DateTime']; // DateTime!
    refresh_token: string; // String!
    token: string; // String!
    token_type: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  AddressType: { // field return type
    adresse: string; // String!
    defaultAddress: boolean; // Boolean!
    fromRemote: boolean; // Boolean!
    id: string; // String!
    isRemoved: boolean | null; // Boolean
    libelle: string; // String!
    userId: string | null; // String
  }
  Attendees: { // field return type
    email: string | null; // String
    name: string | null; // String
    responseStatus: string | null; // String
  }
  AuthUser: { // field return type
    completedSignUp: boolean | null; // Boolean
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  AuthUserBO: { // field return type
    token: string; // String!
    userBO: NexusGenRootTypes['UserBO']; // UserBO!
  }
  BookingTime: { // field return type
    end: string; // String!
    isAvailable: boolean; // Boolean!
    start: string; // String!
  }
  BookingTimes: { // field return type
    friday: NexusGenRootTypes['BookingTime'] | null; // BookingTime
    monday: NexusGenRootTypes['BookingTime'] | null; // BookingTime
    saturday: NexusGenRootTypes['BookingTime'] | null; // BookingTime
    sunday: NexusGenRootTypes['BookingTime'] | null; // BookingTime
    thursday: NexusGenRootTypes['BookingTime'] | null; // BookingTime
    tuesday: NexusGenRootTypes['BookingTime'] | null; // BookingTime
    wednesday: NexusGenRootTypes['BookingTime'] | null; // BookingTime
  }
  CalendarEvent: { // field return type
    attendees: Array<NexusGenRootTypes['Attendees'] | null> | null; // [Attendees]
    colorId: string | null; // String
    created: string | null; // String
    creator: string | null; // String
    description: string | null; // String
    end: NexusGenScalars['DateTime'] | null; // DateTime
    etag: string | null; // String
    eventType: string | null; // String
    htmlLink: string | null; // String
    id: string | null; // String
    kind: string | null; // String
    lang: string | null; // String
    level: string | null; // String
    location: string | null; // String
    onlineMeeting: string | null; // String
    organizer: string | null; // String
    reminderMinutesBeforeStart: number | null; // Int
    start: NexusGenScalars['DateTime'] | null; // DateTime
    status: string | null; // String
    subject: string | null; // String
    summary: string | null; // String
    updated: string | null; // String
  }
  CompleteIncomingMessage: { // field return type
    incomingEmails: Array<NexusGenRootTypes['IncomingEmail'] | null> | null; // [IncomingEmail]
    userId: string; // String!
  }
  Contact: { // field return type
    displayName: string; // String!
    emailAddresses: Array<string | null>; // [String]!
  }
  EmailToTrainTheModelType: { // field return type
    content: string | null; // String
    id: string; // String!
    object: string | null; // String
  }
  EmailUserInfo: { // field return type
    emailAddress: string; // String!
    name: string; // String!
  }
  GetUserMail: { // field return type
    cc: Array<string | null> | null; // [String]
    content: string | null; // String
    htmlBody: string | null; // String
    id: string | null; // String
    isRead: boolean | null; // Boolean
    object: string | null; // String
    receivedDateTime: string | null; // String
    recipients: Array<string | null> | null; // [String]
    sender: NexusGenRootTypes['SenderType'] | null; // SenderType
    subject: string | null; // String
  }
  IncomingEmail: { // field return type
    cc: Array<string | null> | null; // [String]
    content: string; // String!
    htmlBody: string | null; // String
    id: string; // String!
    isRead: boolean; // Boolean!
    object: string; // String!
    receivedDateTime: NexusGenScalars['DateTime']; // DateTime!
    recipients: Array<string | null>; // [String]!
    sender: NexusGenRootTypes['EmailUserInfo']; // EmailUserInfo!
  }
  IncomingMeetingRequestType: { // field return type
    appointmentStatus: string | null; // String
    appointmentUserAction: string | null; // String
    contents: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    dateEntity: string | null; // String
    eventId: string | null; // String
    GMT: number; // Int!
    htmlBody: string | null; // String
    id: string | null; // String
    lang: string | null; // String
    location: string | null; // String
    messageId: string | null; // String
    object: string | null; // String
    recipients: string | null; // String
    schedulePriority: string | null; // String
    sender: string | null; // String
    senderFullName: string | null; // String
    sheduleId: string | null; // String
    typeMail: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    userId: string | null; // String
  }
  IncomingRequestType: { // field return type
    appointmentStatus: string | null; // String
    appointmentUserAction: string | null; // String
    contents: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    dateEntity: string | null; // String
    eventId: string | null; // String
    GMT: number; // Int!
    htmlBody: string | null; // String
    id: string | null; // String
    lang: string | null; // String
    location: string | null; // String
    object: string | null; // String
    recipients: string | null; // String
    schedulePriority: string | null; // String
    sender: string | null; // String
    senderFullName: string | null; // String
    sheduleId: string | null; // String
    typeMail: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    userId: string | null; // String
  }
  InvitedUserInfo: { // field return type
    email: string; // String!
    required: boolean; // Boolean!
  }
  Location: { // field return type
    location: string; // String!
    visioConf: boolean; // Boolean!
  }
  Matching: { // field return type
    busy: boolean; // Boolean!
    eventId: string | null; // String
  }
  MatchingDate: { // field return type
    end: string; // String!
    start: string; // String!
  }
  MatchingList: { // field return type
    busy: boolean; // Boolean!
    Date: NexusGenRootTypes['MatchingDate'] | null; // MatchingDate
    eventId: string | null; // String
  }
  Mutation: { // field return type
    acceptMail: NexusGenRootTypes['SuccessReturn'] | null; // SuccessReturn
    addAddress: NexusGenRootTypes['AddressType'] | null; // AddressType
    addEmailToTrainTheModel: boolean | null; // Boolean
    addIncomingMeetingRequest: Array<NexusGenRootTypes['IncomingMeetingRequestType'] | null> | null; // [IncomingMeetingRequestType]
    addIncomingRequest: Array<NexusGenRootTypes['IncomingRequestType'] | null> | null; // [IncomingRequestType]
    addNotificationToken: string | null; // String
    AppointmentsScheduler: Array<NexusGenRootTypes['TimeSlot'] | null> | null; // [TimeSlot]
    changePassword: NexusGenRootTypes['User'] | null; // User
    checkExpiredToken: NexusGenRootTypes['SuccessReturn'] | null; // SuccessReturn
    createOauth: NexusGenRootTypes['Oauth'] | null; // Oauth
    createTask: NexusGenRootTypes['Task'] | null; // Task
    createUserBookingLink: string | null; // String
    createUserPreference: NexusGenRootTypes['UserPreference'] | null; // UserPreference
    deleteIncomingMeetingRequest: NexusGenRootTypes['IncomingMeetingRequestType'] | null; // IncomingMeetingRequestType
    deleteIncomingRequest: NexusGenRootTypes['IncomingRequestType'] | null; // IncomingRequestType
    deleteTask: NexusGenRootTypes['Task'] | null; // Task
    deleteUserAccount: NexusGenRootTypes['SuccessReturn'] | null; // SuccessReturn
    deleteUserInBO: boolean | null; // Boolean
    forgotPassword: NexusGenRootTypes['SuccessReturn'] | null; // SuccessReturn
    generateAccessToken: NexusGenRootTypes['generateAccessTokenType'] | null; // generateAccessTokenType
    getUserMail: Array<NexusGenRootTypes['GetUserMail'] | null> | null; // [GetUserMail]
    login: NexusGenRootTypes['AuthUser'] | null; // AuthUser
    loginBO: NexusGenRootTypes['AuthUserBO'] | null; // AuthUserBO
    matching: NexusGenRootTypes['Matching'] | null; // Matching
    matchingList: NexusGenRootTypes['MatchingList'] | null; // MatchingList
    outlookAppointmentScheduler: boolean | null; // Boolean
    refusalMail: NexusGenRootTypes['SuccessReturn'] | null; // SuccessReturn
    removeAddress: NexusGenRootTypes['AddressType'] | null; // AddressType
    removeEvent: boolean | null; // Boolean
    removeEventByEventId: NexusGenRootTypes['SuccessReturn'] | null; // SuccessReturn
    removeSchedule: NexusGenRootTypes['Schedule'] | null; // Schedule
    resetPassword: NexusGenRootTypes['SuccessReturn'] | null; // SuccessReturn
    revokeNotificationToken: boolean | null; // Boolean
    saveUserFCMToken: boolean | null; // Boolean
    signUp: NexusGenRootTypes['AuthUser'] | null; // AuthUser
    singupFromBO: boolean; // Boolean!
    subscriptionValidation: NexusGenRootTypes['UserBO'] | null; // UserBO
    TimeSLotRequest: Array<NexusGenRootTypes['TimeSlot'] | null> | null; // [TimeSlot]
    updateAddress: NexusGenRootTypes['AddressType'] | null; // AddressType
    updateAuth: string | null; // String
    updateIncomingMeetingRequest: NexusGenRootTypes['SuccessReturn'] | null; // SuccessReturn
    updateIncomingMeetingRequestReceveidDateTimeMutation: boolean | null; // Boolean
    updateIncomingRequest: NexusGenRootTypes['SuccessReturn'] | null; // SuccessReturn
    updateIncomingRequestReceveidDateTimeMutation: boolean | null; // Boolean
    updatePassword: NexusGenRootTypes['User'] | null; // User
    updateProfile: NexusGenRootTypes['User'] | null; // User
    updateSchedule: NexusGenRootTypes['Schedule'] | null; // Schedule
    updateStatus: boolean | null; // Boolean
    updateTask: NexusGenRootTypes['Task'] | null; // Task
    updateUserBO: boolean | null; // Boolean
    updateUserMode: NexusGenRootTypes['User'] | null; // User
    updateUserPreference: NexusGenRootTypes['UserPreference'] | null; // UserPreference
  }
  Oauth: { // field return type
    access_token: string | null; // String
    email: string | null; // String
    id: string; // ID!
  }
  OutUsersAll: { // field return type
    length: number; // Int!
    users: Array<NexusGenRootTypes['User'] | null>; // [User]!
  }
  OutlookEmail: { // field return type
    bodyPreview: string; // String!
    id: string; // String!
    isRead: boolean; // Boolean!
    sender: NexusGenRootTypes['OutlookEmailAdress'] | null; // OutlookEmailAdress
    subject: string; // String!
    toRecipients: Array<NexusGenRootTypes['OutlookEmailAdress'] | null> | null; // [OutlookEmailAdress]
  }
  OutlookEmailAdress: { // field return type
    address: string | null; // String
    name: string | null; // String
  }
  Query: { // field return type
    getAddressById: NexusGenRootTypes['AddressType'] | null; // AddressType
    getAllCompany: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    getAllSchedules: Array<NexusGenRootTypes['Schedules'] | null> | null; // [Schedules]
    getAllUser: NexusGenRootTypes['OutUsersAll'] | null; // OutUsersAll
    getAllUserTasks: Array<NexusGenRootTypes['Task'] | null> | null; // [Task]
    getConnectedUserEmails: Array<NexusGenRootTypes['OutlookEmail'] | null> | null; // [OutlookEmail]
    getEventById: NexusGenRootTypes['CalendarEvent'] | null; // CalendarEvent
    getEventList: Array<NexusGenRootTypes['CalendarEvent'] | null> | null; // [CalendarEvent]
    getIncomingMeetingRequests: Array<NexusGenRootTypes['IncomingMeetingRequestType'] | null> | null; // [IncomingMeetingRequestType]
    getIncomingRequests: Array<NexusGenRootTypes['IncomingRequestType'] | null> | null; // [IncomingRequestType]
    getRooms: Array<NexusGenRootTypes['RoomsData'] | null> | null; // [RoomsData]
    getSchedule: NexusGenRootTypes['Schedule'] | null; // Schedule
    getScheduleByUserAndEventId: NexusGenRootTypes['Schedules'] | null; // Schedules
    getTaskById: NexusGenRootTypes['Task'] | null; // Task
    getUserAddresses: Array<NexusGenRootTypes['AddressType'] | null> | null; // [AddressType]
    getUserBookingPreferences: NexusGenRootTypes['UserBookingLinkPreference'] | null; // UserBookingLinkPreference
    getUserContacts: Array<NexusGenRootTypes['UserContact'] | null> | null; // [UserContact]
    getUserPreferences: NexusGenRootTypes['UserPreference'] | null; // UserPreference
    me: NexusGenRootTypes['User'] | null; // User
    meBO: NexusGenRootTypes['UserBO'] | null; // UserBO
  }
  RoomsData: { // field return type
    buildingId: string | null; // String
    capacity: number | null; // Int
    generatedResourceName: string | null; // String
    resourceCategory: string | null; // String
    resourceEmail: string | null; // String
    resourceName: string | null; // String
    resourcesId: string | null; // String
    resourceType: string | null; // String
  }
  Schedule: { // field return type
    addressId: string | null; // String
    buildingId: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    debut: NexusGenScalars['DateTime']; // DateTime!
    duration: number; // Int!
    email: string; // String!
    fin: NexusGenScalars['DateTime']; // DateTime!
    GMT: number; // Int!
    id: string; // String!
    lang: string | null; // String
    localisation: string | null; // String
    niveau: string | null; // String
    objet: string; // String!
    sujet: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    userInvited: Array<NexusGenRootTypes['InvitedUserInfo'] | null> | null; // [InvitedUserInfo]
    visioConf: boolean; // Boolean!
  }
  Schedules: { // field return type
    acceptedSlot: NexusGenScalars['DateTime'] | null; // DateTime
    addressId: string | null; // String
    buildingId: string | null; // String
    confirmedMessageId: string | null; // String
    creationDate: string | null; // String
    debut: NexusGenScalars['DateTime']; // DateTime!
    duration: number; // Int!
    email: string; // String!
    eventId: string | null; // String
    fin: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    lang: string | null; // String
    localisation: string | null; // String
    messageId: string | null; // String
    niveau: string | null; // String
    objet: string; // String!
    personNumber: number; // Int!
    reminder: string; // String!
    status: string; // String!
    sujet: string | null; // String
    type: string; // String!
    userInvited: Array<NexusGenRootTypes['InvitedUserInfo'] | null> | null; // [InvitedUserInfo]
    usertoken: string | null; // String
    visioConf: boolean; // Boolean!
  }
  SenderType: { // field return type
    emailAddress: string | null; // String
    name: string | null; // String
  }
  SheduleType: { // field return type
    duration: number | null; // Int
    end: NexusGenScalars['DateTime'] | null; // DateTime
    start: NexusGenScalars['DateTime'] | null; // DateTime
  }
  SuccessReturn: { // field return type
    message: string; // String!
    success: boolean; // Boolean!
  }
  Task: { // field return type
    assignedTo: string | null; // String
    createdAt: string | null; // String
    deadline: string; // String!
    duration: number; // Int!
    endDate: string | null; // String
    endTime: string | null; // String
    id: string; // String!
    mode: string; // String!
    notes: string | null; // String
    parentTaskId: string | null; // String
    participants: string | null; // String
    priority: string | null; // String
    progress: number | null; // Int
    scheduleId: string | null; // String
    startDate: string | null; // String
    startTime: string | null; // String
    status: string | null; // String
    subtasks: Array<NexusGenRootTypes['Task'] | null> | null; // [Task]
    tag: string | null; // String
    timezone: string | null; // String
    title: string; // String!
    updatedAt: string | null; // String
    userId: string | null; // String
  }
  TimeSlot: { // field return type
    end: NexusGenScalars['DateTime'] | null; // DateTime
    start: NexusGenScalars['DateTime'] | null; // DateTime
  }
  TimeSlotList: { // field return type
    TimeList: Array<NexusGenRootTypes['TimeSlot'] | null> | null; // [TimeSlot]
  }
  User: { // field return type
    avatar: string | null; // String
    beginModeFree: NexusGenScalars['DateTime'] | null; // DateTime
    calendarType: string | null; // String
    company: string | null; // String
    contacts: Array<NexusGenRootTypes['Contact'] | null> | null; // [Contact]
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    displayName: string | null; // String
    email: string | null; // String
    firstName: string | null; // String
    id: string; // ID!
    isActive: boolean | null; // Boolean
    isAdmin: boolean | null; // Boolean
    isBanned: boolean | null; // Boolean
    isPayed: boolean | null; // Boolean
    isRemoved: boolean | null; // Boolean
    isSingupBO: boolean | null; // Boolean
    lang: string | null; // String
    lastName: string | null; // String
    mailService: string | null; // String
    modeFree: boolean | null; // Boolean
    oauthStatus: string | null; // String
    password: string | null; // String
    role: NexusGenEnums['UserRole'] | null; // UserRole
    signupCompleted: boolean | null; // Boolean
    timezone: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UserBO: { // field return type
    avatar: string | null; // String
    email: string | null; // String
    firstName: string | null; // String
    id: string; // ID!
    lastName: string | null; // String
    password: string | null; // String
    role: string | null; // String
  }
  UserBookingLinkPreference: { // field return type
    bookingTimes: string | null; // String
    duration: number | null; // Int
    expirationDuration: number | null; // Int
    language: string | null; // String
    level: string | null; // String
  }
  UserContact: { // field return type
    displayName: string; // String!
    emailAddresses: Array<string | null>; // [String]!
  }
  UserPreference: { // field return type
    averageTravelTime: number | null; // Int
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    highCanExtendWorkingTimes: boolean | null; // Boolean
    highCanRescheduleLow: boolean | null; // Boolean
    highCanRescheduleMedium: boolean | null; // Boolean
    highCanSkipPauseTimes: boolean | null; // Boolean
    hightWorkingHoursBegin: NexusGenScalars['DateTime'] | null; // DateTime
    highWorkingHoursEnd: NexusGenScalars['DateTime'] | null; // DateTime
    id: string; // ID!
    mediumCanExtendWorkingHours: boolean | null; // Boolean
    mediumCanRescheduleLow: boolean | null; // Boolean
    mediumCanSkipPauseTimes: boolean | null; // Boolean
    mediumWorkingHoursBegin: NexusGenScalars['DateTime'] | null; // DateTime
    mediumWorkingHoursEnd: NexusGenScalars['DateTime'] | null; // DateTime
    pauseHours: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    userId: string | null; // String
    waitngResponseTimeForHIM: number | null; // Int
    waitngResponseTimeForLIM: number | null; // Int
    waitngResponseTimeForMIM: number | null; // Int
    workingDays: string | null; // String
    workingHoursBegin: NexusGenScalars['DateTime'] | null; // DateTime
    workingHoursEnd: NexusGenScalars['DateTime'] | null; // DateTime
  }
  generateAccessTokenType: { // field return type
    expiry_date: NexusGenScalars['DateTime']; // DateTime!
    refresh_token: string; // String!
    token: string; // String!
    token_type: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  AddressType: { // field return type name
    adresse: 'String'
    defaultAddress: 'Boolean'
    fromRemote: 'Boolean'
    id: 'String'
    isRemoved: 'Boolean'
    libelle: 'String'
    userId: 'String'
  }
  Attendees: { // field return type name
    email: 'String'
    name: 'String'
    responseStatus: 'String'
  }
  AuthUser: { // field return type name
    completedSignUp: 'Boolean'
    token: 'String'
    user: 'User'
  }
  AuthUserBO: { // field return type name
    token: 'String'
    userBO: 'UserBO'
  }
  BookingTime: { // field return type name
    end: 'String'
    isAvailable: 'Boolean'
    start: 'String'
  }
  BookingTimes: { // field return type name
    friday: 'BookingTime'
    monday: 'BookingTime'
    saturday: 'BookingTime'
    sunday: 'BookingTime'
    thursday: 'BookingTime'
    tuesday: 'BookingTime'
    wednesday: 'BookingTime'
  }
  CalendarEvent: { // field return type name
    attendees: 'Attendees'
    colorId: 'String'
    created: 'String'
    creator: 'String'
    description: 'String'
    end: 'DateTime'
    etag: 'String'
    eventType: 'String'
    htmlLink: 'String'
    id: 'String'
    kind: 'String'
    lang: 'String'
    level: 'String'
    location: 'String'
    onlineMeeting: 'String'
    organizer: 'String'
    reminderMinutesBeforeStart: 'Int'
    start: 'DateTime'
    status: 'String'
    subject: 'String'
    summary: 'String'
    updated: 'String'
  }
  CompleteIncomingMessage: { // field return type name
    incomingEmails: 'IncomingEmail'
    userId: 'String'
  }
  Contact: { // field return type name
    displayName: 'String'
    emailAddresses: 'String'
  }
  EmailToTrainTheModelType: { // field return type name
    content: 'String'
    id: 'String'
    object: 'String'
  }
  EmailUserInfo: { // field return type name
    emailAddress: 'String'
    name: 'String'
  }
  GetUserMail: { // field return type name
    cc: 'String'
    content: 'String'
    htmlBody: 'String'
    id: 'String'
    isRead: 'Boolean'
    object: 'String'
    receivedDateTime: 'String'
    recipients: 'String'
    sender: 'SenderType'
    subject: 'String'
  }
  IncomingEmail: { // field return type name
    cc: 'String'
    content: 'String'
    htmlBody: 'String'
    id: 'String'
    isRead: 'Boolean'
    object: 'String'
    receivedDateTime: 'DateTime'
    recipients: 'String'
    sender: 'EmailUserInfo'
  }
  IncomingMeetingRequestType: { // field return type name
    appointmentStatus: 'String'
    appointmentUserAction: 'String'
    contents: 'String'
    createdAt: 'DateTime'
    dateEntity: 'String'
    eventId: 'String'
    GMT: 'Int'
    htmlBody: 'String'
    id: 'String'
    lang: 'String'
    location: 'String'
    messageId: 'String'
    object: 'String'
    recipients: 'String'
    schedulePriority: 'String'
    sender: 'String'
    senderFullName: 'String'
    sheduleId: 'String'
    typeMail: 'String'
    updatedAt: 'DateTime'
    userId: 'String'
  }
  IncomingRequestType: { // field return type name
    appointmentStatus: 'String'
    appointmentUserAction: 'String'
    contents: 'String'
    createdAt: 'DateTime'
    dateEntity: 'String'
    eventId: 'String'
    GMT: 'Int'
    htmlBody: 'String'
    id: 'String'
    lang: 'String'
    location: 'String'
    object: 'String'
    recipients: 'String'
    schedulePriority: 'String'
    sender: 'String'
    senderFullName: 'String'
    sheduleId: 'String'
    typeMail: 'String'
    updatedAt: 'DateTime'
    userId: 'String'
  }
  InvitedUserInfo: { // field return type name
    email: 'String'
    required: 'Boolean'
  }
  Location: { // field return type name
    location: 'String'
    visioConf: 'Boolean'
  }
  Matching: { // field return type name
    busy: 'Boolean'
    eventId: 'String'
  }
  MatchingDate: { // field return type name
    end: 'String'
    start: 'String'
  }
  MatchingList: { // field return type name
    busy: 'Boolean'
    Date: 'MatchingDate'
    eventId: 'String'
  }
  Mutation: { // field return type name
    acceptMail: 'SuccessReturn'
    addAddress: 'AddressType'
    addEmailToTrainTheModel: 'Boolean'
    addIncomingMeetingRequest: 'IncomingMeetingRequestType'
    addIncomingRequest: 'IncomingRequestType'
    addNotificationToken: 'String'
    AppointmentsScheduler: 'TimeSlot'
    changePassword: 'User'
    checkExpiredToken: 'SuccessReturn'
    createOauth: 'Oauth'
    createTask: 'Task'
    createUserBookingLink: 'String'
    createUserPreference: 'UserPreference'
    deleteIncomingMeetingRequest: 'IncomingMeetingRequestType'
    deleteIncomingRequest: 'IncomingRequestType'
    deleteTask: 'Task'
    deleteUserAccount: 'SuccessReturn'
    deleteUserInBO: 'Boolean'
    forgotPassword: 'SuccessReturn'
    generateAccessToken: 'generateAccessTokenType'
    getUserMail: 'GetUserMail'
    login: 'AuthUser'
    loginBO: 'AuthUserBO'
    matching: 'Matching'
    matchingList: 'MatchingList'
    outlookAppointmentScheduler: 'Boolean'
    refusalMail: 'SuccessReturn'
    removeAddress: 'AddressType'
    removeEvent: 'Boolean'
    removeEventByEventId: 'SuccessReturn'
    removeSchedule: 'Schedule'
    resetPassword: 'SuccessReturn'
    revokeNotificationToken: 'Boolean'
    saveUserFCMToken: 'Boolean'
    signUp: 'AuthUser'
    singupFromBO: 'Boolean'
    subscriptionValidation: 'UserBO'
    TimeSLotRequest: 'TimeSlot'
    updateAddress: 'AddressType'
    updateAuth: 'String'
    updateIncomingMeetingRequest: 'SuccessReturn'
    updateIncomingMeetingRequestReceveidDateTimeMutation: 'Boolean'
    updateIncomingRequest: 'SuccessReturn'
    updateIncomingRequestReceveidDateTimeMutation: 'Boolean'
    updatePassword: 'User'
    updateProfile: 'User'
    updateSchedule: 'Schedule'
    updateStatus: 'Boolean'
    updateTask: 'Task'
    updateUserBO: 'Boolean'
    updateUserMode: 'User'
    updateUserPreference: 'UserPreference'
  }
  Oauth: { // field return type name
    access_token: 'String'
    email: 'String'
    id: 'ID'
  }
  OutUsersAll: { // field return type name
    length: 'Int'
    users: 'User'
  }
  OutlookEmail: { // field return type name
    bodyPreview: 'String'
    id: 'String'
    isRead: 'Boolean'
    sender: 'OutlookEmailAdress'
    subject: 'String'
    toRecipients: 'OutlookEmailAdress'
  }
  OutlookEmailAdress: { // field return type name
    address: 'String'
    name: 'String'
  }
  Query: { // field return type name
    getAddressById: 'AddressType'
    getAllCompany: 'User'
    getAllSchedules: 'Schedules'
    getAllUser: 'OutUsersAll'
    getAllUserTasks: 'Task'
    getConnectedUserEmails: 'OutlookEmail'
    getEventById: 'CalendarEvent'
    getEventList: 'CalendarEvent'
    getIncomingMeetingRequests: 'IncomingMeetingRequestType'
    getIncomingRequests: 'IncomingRequestType'
    getRooms: 'RoomsData'
    getSchedule: 'Schedule'
    getScheduleByUserAndEventId: 'Schedules'
    getTaskById: 'Task'
    getUserAddresses: 'AddressType'
    getUserBookingPreferences: 'UserBookingLinkPreference'
    getUserContacts: 'UserContact'
    getUserPreferences: 'UserPreference'
    me: 'User'
    meBO: 'UserBO'
  }
  RoomsData: { // field return type name
    buildingId: 'String'
    capacity: 'Int'
    generatedResourceName: 'String'
    resourceCategory: 'String'
    resourceEmail: 'String'
    resourceName: 'String'
    resourcesId: 'String'
    resourceType: 'String'
  }
  Schedule: { // field return type name
    addressId: 'String'
    buildingId: 'String'
    createdAt: 'DateTime'
    debut: 'DateTime'
    duration: 'Int'
    email: 'String'
    fin: 'DateTime'
    GMT: 'Int'
    id: 'String'
    lang: 'String'
    localisation: 'String'
    niveau: 'String'
    objet: 'String'
    sujet: 'String'
    updatedAt: 'DateTime'
    userInvited: 'InvitedUserInfo'
    visioConf: 'Boolean'
  }
  Schedules: { // field return type name
    acceptedSlot: 'DateTime'
    addressId: 'String'
    buildingId: 'String'
    confirmedMessageId: 'String'
    creationDate: 'String'
    debut: 'DateTime'
    duration: 'Int'
    email: 'String'
    eventId: 'String'
    fin: 'DateTime'
    id: 'String'
    lang: 'String'
    localisation: 'String'
    messageId: 'String'
    niveau: 'String'
    objet: 'String'
    personNumber: 'Int'
    reminder: 'String'
    status: 'String'
    sujet: 'String'
    type: 'String'
    userInvited: 'InvitedUserInfo'
    usertoken: 'String'
    visioConf: 'Boolean'
  }
  SenderType: { // field return type name
    emailAddress: 'String'
    name: 'String'
  }
  SheduleType: { // field return type name
    duration: 'Int'
    end: 'DateTime'
    start: 'DateTime'
  }
  SuccessReturn: { // field return type name
    message: 'String'
    success: 'Boolean'
  }
  Task: { // field return type name
    assignedTo: 'String'
    createdAt: 'String'
    deadline: 'String'
    duration: 'Int'
    endDate: 'String'
    endTime: 'String'
    id: 'String'
    mode: 'String'
    notes: 'String'
    parentTaskId: 'String'
    participants: 'String'
    priority: 'String'
    progress: 'Int'
    scheduleId: 'String'
    startDate: 'String'
    startTime: 'String'
    status: 'String'
    subtasks: 'Task'
    tag: 'String'
    timezone: 'String'
    title: 'String'
    updatedAt: 'String'
    userId: 'String'
  }
  TimeSlot: { // field return type name
    end: 'DateTime'
    start: 'DateTime'
  }
  TimeSlotList: { // field return type name
    TimeList: 'TimeSlot'
  }
  User: { // field return type name
    avatar: 'String'
    beginModeFree: 'DateTime'
    calendarType: 'String'
    company: 'String'
    contacts: 'Contact'
    createdAt: 'DateTime'
    displayName: 'String'
    email: 'String'
    firstName: 'String'
    id: 'ID'
    isActive: 'Boolean'
    isAdmin: 'Boolean'
    isBanned: 'Boolean'
    isPayed: 'Boolean'
    isRemoved: 'Boolean'
    isSingupBO: 'Boolean'
    lang: 'String'
    lastName: 'String'
    mailService: 'String'
    modeFree: 'Boolean'
    oauthStatus: 'String'
    password: 'String'
    role: 'UserRole'
    signupCompleted: 'Boolean'
    timezone: 'String'
    updatedAt: 'DateTime'
  }
  UserBO: { // field return type name
    avatar: 'String'
    email: 'String'
    firstName: 'String'
    id: 'ID'
    lastName: 'String'
    password: 'String'
    role: 'String'
  }
  UserBookingLinkPreference: { // field return type name
    bookingTimes: 'String'
    duration: 'Int'
    expirationDuration: 'Int'
    language: 'String'
    level: 'String'
  }
  UserContact: { // field return type name
    displayName: 'String'
    emailAddresses: 'String'
  }
  UserPreference: { // field return type name
    averageTravelTime: 'Int'
    createdAt: 'DateTime'
    highCanExtendWorkingTimes: 'Boolean'
    highCanRescheduleLow: 'Boolean'
    highCanRescheduleMedium: 'Boolean'
    highCanSkipPauseTimes: 'Boolean'
    hightWorkingHoursBegin: 'DateTime'
    highWorkingHoursEnd: 'DateTime'
    id: 'ID'
    mediumCanExtendWorkingHours: 'Boolean'
    mediumCanRescheduleLow: 'Boolean'
    mediumCanSkipPauseTimes: 'Boolean'
    mediumWorkingHoursBegin: 'DateTime'
    mediumWorkingHoursEnd: 'DateTime'
    pauseHours: 'String'
    updatedAt: 'DateTime'
    userId: 'String'
    waitngResponseTimeForHIM: 'Int'
    waitngResponseTimeForLIM: 'Int'
    waitngResponseTimeForMIM: 'Int'
    workingDays: 'String'
    workingHoursBegin: 'DateTime'
    workingHoursEnd: 'DateTime'
  }
  generateAccessTokenType: { // field return type name
    expiry_date: 'DateTime'
    refresh_token: 'String'
    token: 'String'
    token_type: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    acceptMail: { // args
      input: NexusGenInputs['AcceptMailInput']; // AcceptMailInput!
    }
    addAddress: { // args
      input: NexusGenInputs['AddressInput']; // AddressInput!
    }
    addEmailToTrainTheModel: { // args
      input?: Array<NexusGenInputs['EmailToTrainTheModelInput'] | null> | null; // [EmailToTrainTheModelInput]
    }
    addIncomingMeetingRequest: { // args
      inputs?: Array<NexusGenInputs['IncomingMeetingRequestInput'] | null> | null; // [IncomingMeetingRequestInput]
    }
    addIncomingRequest: { // args
      inputs?: Array<NexusGenInputs['IncomingRequestInput'] | null> | null; // [IncomingRequestInput]
    }
    addNotificationToken: { // args
      token: string; // String!
      userId: string; // String!
    }
    AppointmentsScheduler: { // args
      appointmentsInput: NexusGenInputs['AppointmentsShedulerInput']; // AppointmentsShedulerInput!
    }
    changePassword: { // args
      input: NexusGenInputs['ChangePasswordInput']; // ChangePasswordInput!
    }
    checkExpiredToken: { // args
      email: string; // String!
      token: string; // String!
    }
    createOauth: { // args
      data: NexusGenInputs['OauthInput']; // OauthInput!
    }
    createTask: { // args
      data: NexusGenInputs['TaskInput']; // TaskInput!
    }
    createUserBookingLink: { // args
      data?: NexusGenInputs['BookingLinkInput'] | null; // BookingLinkInput
    }
    createUserPreference: { // args
      input: NexusGenInputs['UserPreferenceInputs']; // UserPreferenceInputs!
    }
    deleteIncomingMeetingRequest: { // args
      incomingRequestId: string; // String!
    }
    deleteIncomingRequest: { // args
      incomingRequestId: string; // String!
    }
    deleteTask: { // args
      id: string; // String!
    }
    deleteUserAccount: { // args
      userId: string; // String!
    }
    deleteUserInBO: { // args
      userId: string; // String!
    }
    forgotPassword: { // args
      email: string; // String!
    }
    generateAccessToken: { // args
      code: string; // String!
    }
    getUserMail: { // args
      data?: NexusGenInputs['GetMailInputs'] | null; // GetMailInputs
    }
    login: { // args
      deviceToken?: string | null; // String
      email: string; // String!
      password: string; // String!
    }
    loginBO: { // args
      email: string; // String!
      password: string; // String!
    }
    matching: { // args
      data: NexusGenInputs['MatchingInputs']; // MatchingInputs!
    }
    matchingList: { // args
      data: NexusGenInputs['MatchingListInputs']; // MatchingListInputs!
    }
    outlookAppointmentScheduler: { // args
      appointmentsInputs: NexusGenInputs['AppointmentsShedulerInput']; // AppointmentsShedulerInput!
    }
    refusalMail: { // args
      data: NexusGenInputs['RefusalMailInput']; // RefusalMailInput!
    }
    removeAddress: { // args
      id: string; // String!
      input: NexusGenInputs['AddressInput']; // AddressInput!
    }
    removeEvent: { // args
      data: NexusGenInputs['removeEventInputs']; // removeEventInputs!
    }
    removeEventByEventId: { // args
      eventId: string; // String!
      GMT: number; // Int!
      userId: string; // String!
    }
    removeSchedule: { // args
      scheduleId: string; // String!
    }
    resetPassword: { // args
      input: NexusGenInputs['ResetPasswordInput']; // ResetPasswordInput!
    }
    revokeNotificationToken: { // args
      token: string; // String!
    }
    saveUserFCMToken: { // args
      token: string; // String!
      userId: string; // String!
    }
    signUp: { // args
      userInput: NexusGenInputs['UserCreateInput']; // UserCreateInput!
    }
    singupFromBO: { // args
      userInputBO: NexusGenInputs['UserFromBOInput']; // UserFromBOInput!
    }
    subscriptionValidation: { // args
      free: boolean; // Boolean!
    }
    TimeSLotRequest: { // args
      data: NexusGenInputs['TimeSlotInput']; // TimeSlotInput!
    }
    updateAddress: { // args
      id: string; // String!
      input: NexusGenInputs['AddressInput']; // AddressInput!
    }
    updateAuth: { // args
      data: NexusGenInputs['OauthUpdateInput']; // OauthUpdateInput!
    }
    updateIncomingMeetingRequest: { // args
      inputs: NexusGenInputs['UpdateIncomingMeetingRequestInput']; // UpdateIncomingMeetingRequestInput!
    }
    updateIncomingMeetingRequestReceveidDateTimeMutation: { // args
      data: NexusGenInputs['UpdateIncomingMeetingRequestReceveidDateTimeInputs']; // UpdateIncomingMeetingRequestReceveidDateTimeInputs!
    }
    updateIncomingRequest: { // args
      inputs: NexusGenInputs['UpdateIncomingRequestInput']; // UpdateIncomingRequestInput!
    }
    updateIncomingRequestReceveidDateTimeMutation: { // args
      data: NexusGenInputs['UpdateIncomingRequestReceveidDateTimeInputs']; // UpdateIncomingRequestReceveidDateTimeInputs!
    }
    updatePassword: { // args
      id: string; // String!
      newPassword: string; // String!
      oldPassword: string; // String!
    }
    updateProfile: { // args
      id: string; // String!
      input: NexusGenInputs['UserProfileInput']; // UserProfileInput!
    }
    updateSchedule: { // args
      data: NexusGenInputs['UpdateScheduleInputs']; // UpdateScheduleInputs!
      id: string; // String!
    }
    updateStatus: { // args
      isActive: boolean; // Boolean!
      userId: string; // String!
    }
    updateTask: { // args
      data: NexusGenInputs['TaskInput']; // TaskInput!
      id: string; // String!
    }
    updateUserBO: { // args
      id: string; // String!
      newEmail?: string | null; // String
      newPassword?: string | null; // String
    }
    updateUserMode: { // args
      beginModeFree: string; // String!
      modeFree: boolean; // Boolean!
      userId: string; // String!
    }
    updateUserPreference: { // args
      id: string; // String!
      input: NexusGenInputs['UserPreferenceInputs']; // UserPreferenceInputs!
    }
  }
  Query: {
    getAddressById: { // args
      id: string; // String!
    }
    getAllSchedules: { // args
      userId: string; // String!
    }
    getAllUser: { // args
      keyFilterActive?: boolean | null; // Boolean
      keyFilterCompany?: string | null; // String
      keySearch?: string | null; // String
      limite?: number | null; // Int
      offset?: number | null; // Int
    }
    getAllUserTasks: { // args
      userId: string; // String!
    }
    getEventById: { // args
      id: string; // String!
    }
    getEventList: { // args
      calendarInputs: NexusGenInputs['CalendarInputs']; // CalendarInputs!
    }
    getIncomingMeetingRequests: { // args
      userId: string; // String!
    }
    getIncomingRequests: { // args
      userId: string; // String!
    }
    getRooms: { // args
      getRoomsInputs?: NexusGenInputs['getRoomsInputs'] | null; // getRoomsInputs
    }
    getSchedule: { // args
      id: string; // String!
    }
    getScheduleByUserAndEventId: { // args
      eventId: string; // String!
      userId: string; // String!
    }
    getTaskById: { // args
      id: string; // String!
    }
    getUserAddresses: { // args
      userId: string; // String!
    }
    getUserBookingPreferences: { // args
      userId: string; // String!
    }
    getUserContacts: { // args
      userId: string; // String!
    }
    getUserPreferences: { // args
      userId: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}